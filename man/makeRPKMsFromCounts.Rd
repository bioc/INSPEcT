% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeRPKMsFromCounts-functions.R
\name{makeRPKMsFromCounts}
\alias{makeRPKMsFromCounts}
\title{Calculate RPKM and count values on introns and exons from bam/sam files}
\usage{
makeRPKMsFromCounts(txdb, allcounts = NULL, by = c("gene", "tx"),
  DESeq2 = TRUE, temporalDesign = NULL)
}
\arguments{
\item{txdb}{A TranscriptDB object}

\item{allcounts}{A list object containing intronic and exonic counts from total and eventually 4sU experiments with the associated statistics redarding the assigned reads.}

\item{by}{A character, either "gene" or "tx", indicating if rpkms and counts should be summarized at the levels of genes or transcripts. "gene" by default}

\item{DESeq2}{A logical, if TRUE the RPKMs from exons and introns and associated variances are evaluated through the package DESeq2}

\item{temporalDesign}{A numerical which reports the desing of the experiment in terms of time points and replicates. The time points must be ordered according
to the columns of the count matrices submitted for the analysis; these labels define conditions and replicates.}
}
\value{
A list containing rpkms, counts and the annotation extracted from TxDB for exons and introns, if DESeq2 = TRUE the output also contains a set of data
needed to estimate rpkms variances.
}
\description{
Given a TranscriptDb object and a matrix of counts for total and eventually RNA 
experiments, "makeRPKMsFromCounts" function calculates RPKM on exonic and intronic 
features per each gene. Reads that fall where intronic and exonic features overlaps are 
univoquely assigned to exons.
}
\examples{
require(TxDb.Mmusculus.UCSC.mm9.knownGene)
txdb <- TxDb.Mmusculus.UCSC.mm9.knownGene

data('allcounts4su', package='INSPEcT')

tpts <- c(0,1/6,1/3,1/2,1,1.5,2,4,8,12,16)
temporalDesign <- rep(tpts,3)

#4sU analysis with DESeq2
makeRPKMsOut_4sU <- makeRPKMsFromCounts(txdb=txdb,allcounts=allcounts4su,temporalDesign=temporalDesign,DESeq2=TRUE)

rpkms_4sU <- makeRPKMsOut_4sU$rpkms
counts_4sU <- makeRPKMsOut_4sU$counts
annotations_4sU <- makeRPKMsOut_4sU$annotation
dispersion_parameters_DESeq2_4sU <- makeRPKMsOut_4sU$dispersion_parameters_DESeq2

#4sU analysis without DESeq2
makeRPKMsOut_4sU <- makeRPKMsFromCounts(txdb=txdb,allcounts=allcounts4su,temporalDesign=temporalDesign,DESeq2=FALSE)

rpkms_4sU <- makeRPKMsOut_4sU$rpkms
counts_4sU <- makeRPKMsOut_4sU$counts
annotations_4sU <- makeRPKMsOut_4sU$annotation

#No4sU analysis with DESeq2
allcounts <- allcounts4su$total

makeRPKMsOut_No4sU <- makeRPKMsFromCounts(txdb=txdb,allcounts=allcounts,temporalDesign=temporalDesign,DESeq2=TRUE)

rpkms_No4sU <- makeRPKMsOut_No4sU$rpkms
counts_No4sU <- makeRPKMsOut_No4sU$counts
annotations_No4sU <- makeRPKMsOut_No4sU$annotation
dispersion_parameters_DESeq2_No4sU <- makeRPKMsOut_No4sU$dispersion_parameters_DESeq2
}
